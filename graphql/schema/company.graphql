type Company @key(fields: "id") {
  id: ID!
  name: String!
  code: String!
  users: [User!]! @goField(forceResolver: true) @hasPerm(perm: "Users:Read")
  domains: [String!]! @goField(forceResolver: true)
  website: String!
  billingAddress: Address! @goField(forceResolver: true)
  shippingAddress: Address! @goField(forceResolver: true)
  createdAt: Time!
}

input CreateCompanyInput {
  name: String!
  code: String!
  domains: [String!]!
  website: String!
  billingAddress: CreateAddressInput!
  shippingAddress: CreateAddressInput!
}

extend type Query {
  companyName(code: String!): String @hasPerm(perm: "Company:Read")

  company: Company! @hasPerm(perm: "Company:Read")
  otherCompany(id: ID!): Company @hasPerm(perm: "OtherCompany:Read")

  companies(page: Int): [Company!] @hasPerm(perm: "OtherCompanies:Read")
}

extend type Mutation {
  createCompany(company: CreateCompanyInput!): Company
    @hasPerm(perm: "OtherCompany:Create")

  deleteCompany(id: ID!): Boolean @hasPerm(perm: "OtherCompany:Delete")
}
